package p02;

import java.io.*;

public class P02 {
    
    static String [] id_id_collection_prime;
    static int [] Divorce_Date= new int[100];
    static int [] mirrage_collections;
    static String [] names_collections;
    static int [] births_collections;
    static String [] months_collections;
    static String [] _last_names;
    static String [] gendars_collections;
    static String [] Ids_family;
    static int universal_counter;

    public static String[] getMonths_collections() {
        return months_collections;
    }

    public static void setMonths_collections(String[] months_collections) {
        P02.months_collections = months_collections;
    }

    public static int getUniversal_counter() {
        return universal_counter;
    }

    public static void setUniversal_counter(int universal_counter) {
        P02.universal_counter = universal_counter;
    }
    

    
    public static void setIds_family(String[] Ids_family) {
        P02.Ids_family = Ids_family;
    }

    public static String[] getIds_family() {
        return Ids_family;
    }

    
    public static String[] getGendars_collections() {
        return gendars_collections;
    }
    public static void setGendars_collections(String[] gendars_collections) {
        P02.gendars_collections = gendars_collections;
    }   
    public static String[] getLast_names() {
        return _last_names;
    }
    public static void setLast_names(String[] _last_names) {
        P02._last_names = _last_names;
    }    
    public static int[] getBirths_collections() {
        return births_collections;
    }

    public static void setBirths_collections(int[] births_collections) {
        P02.births_collections = births_collections;
    }
    
    
    public static void setNames_collections(String[] names_collections) {
        P02.names_collections = names_collections;
    }

    public static String[] getNames_collections() {
        return names_collections;
    }
    
    

    public static void setMirrage_collections(int[] mirrage_collections) {
        P02.mirrage_collections = mirrage_collections;
    }

    public static int[] getMirrage_collections() {
        return mirrage_collections;
    }

    
    

    public static int[] getDivorce_Date() {
        return Divorce_Date;
    }

    public static void setDivorce_Date(int[] Divorce_Date) {
        P02.Divorce_Date = Divorce_Date;
    }
    
    
    
    public static String[] getId_id_collection_prime() {
        return id_id_collection_prime;
    }

    public static void setId_id_collection_prime(String[] id_id_collection_prime) {
        P02.id_id_collection_prime = id_id_collection_prime;
    }
    public static void print_names_id (BufferedReader read) throws IOException, Exception{
       //  System.out.println("ID\tName");
         String [] id_collection=new String[100];
         String [] name_collection = new String [100];
         String [] gen = new String[100];
         int counter = 0;
          String line;
     while (read.ready()){
                line= read.readLine();
                String[] split = line.split(" ");
                if(line.contains("@")&& line.contains("INDI")){
                 split = line.split(" ");
                String id = split[1];
                id_collection[counter]=id;
              //  System.out.print(id);
                }
                
                if (line.contains("SEX")){
                split = line.split(" ");
                gen[counter] = split[2];
                setGendars_collections(gen);
                counter++;
                }
                
                if(line.contains("NAME")){
                split = line.split(" ");
              //  System.out.println("\t"+split[2]);
                name_collection[counter]=split[2];
                }
            
                }
            
      //  System.out.println("------------------------\n");
        setUniversal_counter(counter);
        print_families(id_collection,name_collection);
        setId_id_collection_prime(id_collection);
    }
    public static void age_checker () throws Exception{
    String [] name_collections = new String[100];
    int [] birth_collectin= new int[100];
    String [] last_name = new String [100];
    int [] Death_colection= new int[100];
    int [] mirrage_collection = new int[100];
    int [] Age= new int[100];
    String [] months_collections = new String[100];
    int counter = 0;
     BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
  //  System.out.println("------------------------\n"); 
   // System.out.println("US07");   
   // System.out.println("Name\t\tStatus");
    while (read.ready()){
    String line= read.readLine();
    String [] split;
    if (line.contains("NAME")){
    split = line.split(" ");
    name_collections[counter]=split[2];
    last_name[counter]=split[3];
    setNames_collections(name_collections);
    setLast_names(last_name);
    read.readLine();
    }//end of if
    if(line.contains("BIRT")){
    line =read.readLine();
    split = line.split(" ");
    months_collections[counter]=split[3];
        setMonths_collections(months_collections);
    birth_collectin[counter]=Integer.parseInt(split[4].trim());
    line =read.readLine();
    if (line.contains("MARR")){
    line =read.readLine();
    split = line.split(" ");
    mirrage_collection[counter]=Integer.parseInt(split[2].trim());
   setMirrage_collections(mirrage_collection);
    line =read.readLine();
    }
    if (line.contains("DEAT")){
    line = read.readLine();
    split = line.split(" ");
    Death_colection[counter]=Integer.parseInt(split[4].trim());
    Age[counter]=Death_colection[counter]-birth_collectin[counter];
    if (Age[counter]>150){//System.out.println(name_collections[counter]+"\t"+"More Than 150 Years old");
        counter++;}else{
   // System.out.println(name_collections[counter]+"\t"+"Less Than 150 Years old");
        counter++;
    }
    }else{
    Death_colection[counter]=0;
    Age[counter]= 2015-birth_collectin[counter];
    if (Age[counter]>150){
       // System.out.println(name_collections[counter]+"\t"+"More Than 150 Years old");
        counter++;}else{
   // System.out.println(name_collections[counter]+"\t"+"Less Than 150 Years old");
        counter++;
    }
    }
    }//end of second if
    }//end of the loop
  //  US27(name_collections,Age,counter);
   // US35(name_collections,birth_collectin, counter,months_collections);
   // US36(Death_colection,name_collections,months_collections,counter);
   // US06();
   //  US11();
    setBirths_collections(birth_collectin);
  //  US08(birth_collectin,Death_colection);
   // US10();
    //US26();
    //US28();
    //US16();
    //US21();
    
    //Sprint 3
        US22();
        US38();
    }
    
    
    public static void US22()throws Exception{
       BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
       System.out.println("------------------------"); 
      System.out.println("US22");   
         System.out.println("ID\tUniqe");
         String [] id_collection=getId_id_collection_prime();
         String [] family_id_collection = new String[100];
         int counter = 0;
          String line;
     while (read.ready()){
                line= read.readLine();
                String[] split = line.split(" ");
                if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
                split = line.split(" ");
                family_id_collection[counter]=split[1];
              //  System.out.print(family_id_collection[counter]);
                setIds_family(family_id_collection);
                counter++;
                }
               
                
                }
     int temp = 0,inside_loop=0;
     boolean enter;
     while (temp<getUniversal_counter()){
         enter = true;
         inside_loop=0;
         while (inside_loop<getUniversal_counter()){
         if (id_collection[temp].equals(id_collection[inside_loop])&&inside_loop!=temp){
             System.out.println(id_collection[temp]+"\t"+"NOT Uniqe");
             inside_loop++;
             enter = false;
         }
         inside_loop++;
         }
         if (enter == true)
             System.out.println(id_collection[temp]+"\t"+"Uniqe");
          temp++;
     }
     
     temp = 0;
     inside_loop=0;
     while (temp<counter){
         enter = true;
         inside_loop=0;
         while (inside_loop<counter){
         if (family_id_collection[temp].equals(family_id_collection[inside_loop])&&inside_loop!=temp){
             System.out.println(family_id_collection[temp]+"\t"+"NOT Uniqe");
             inside_loop++;
             enter = false;
         }
         inside_loop++;
         }
         if (enter == true)
             System.out.println(family_id_collection[temp]+"\t"+"Uniqe");
          temp++;
     }
     
        
    
    
    }
    public static void US38()throws Exception{
       System.out.println("------------------------\n"); 
   System.out.println("US38");  
   System.out.println("Name\t\t\tBirthday");
   
   int counter =0;
   
   while (counter < universal_counter){
       if (months_collections[counter].equalsIgnoreCase("NOV")|| months_collections[counter].equalsIgnoreCase("DEC"))
          System.out.println(names_collections[counter]+"\t\t\t"+months_collections[counter]+"   ( Your Birthday in the next 30 Day Congrats :) )");
       else
          System.out.println(names_collections[counter]+"\t\t\t"+months_collections[counter]); 
   counter++;
   
   }
    
    }
    
    
    public static void US10()throws Exception{
         System.out.println("------------------------\n"); 
         System.out.println("US10"); 
          System.out.println("Name\t\tAge At mirrage"); 
         int [] mirrage =getMirrage_collections();
         int [] births = getBirths_collections();
         String [] names = getNames_collections();
         int counter =0;
         while (names[counter].length()>counter){
         if ((mirrage[counter]!=0&&births[counter]!=0)&&((mirrage[counter]-births[counter])>14)){
             System.out.println(names[counter]+"\t\t"+(mirrage[counter]-births[counter]));
             
         } else if((mirrage[counter]!=0&&births[counter]!=0)&&((mirrage[counter]-births[counter])<14)){
          System.out.println("Error!"+names[counter]+"\t\t"+(mirrage[counter]-births[counter]));
          
         }
         counter++;
         }
         
        System.out.println("------------------------\n");  
     }  
    public static void US08( int[] birth_collectin, int[] Death_colection) throws Exception {
    BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
    System.out.println("US08"); 
    String[]names=getNames_collections();
    String [] id_collection = getId_id_collection_prime();
    int father_BD=0,father_DD=0,mother_BD=0,mother_DD=0;
    
    
            while (read.ready()){
         String line= read.readLine();
         String [] split;
         if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
             split = line.split(" ");
             System.out.println();
             System.out.println("-----------"+split[1]+" ---------");
             System.out.println(" Husband \t\t\t\t\t Wife\t\t\t\t\tChild");
             line= read.readLine();
             split = line.split(" ");
             
             int counter = 0;
             while (!split[2].equals(id_collection[counter])){
             counter ++;
             }
             father_BD = birth_collectin[counter];
             father_DD = Death_colection[counter];
             if (Death_colection[counter]!=0)
             System.out.print("  "+names[counter]+" Birth: "+birth_collectin[counter]+" Death:"+Death_colection[counter]+"\t\t");
             else
              System.out.print("  "+names[counter]+"Birth: "+birth_collectin[counter]+" Death: "+Death_colection[counter]+"\t\t");    
             
             line= read.readLine();
             split = line.split(" ");
             counter = 0;
             while (!split[2].equals(id_collection[counter])){
             counter ++;
             }
             mother_BD = birth_collectin[counter];
             mother_DD = Death_colection[counter];
             if (Death_colection[counter]!=0)
             System.out.print(names[counter]+"  "+"Birth: "+birth_collectin[counter]+" Death: "+Death_colection[counter]+"\t\t");
             else
              System.out.print(names[counter]+"Birth"+birth_collectin[counter]+" Death:"+Death_colection[counter]+"\t\t");    
             
         
         }
         else if (line.contains("1")&&line.contains("CHIL")&&line.contains("@I")){
         split = line.split(" ");
             
             int counter = 0;
             while (!split[2].equals(id_collection[counter])){
             counter ++;
             }
             if (Death_colection[counter]!=0){
             if (birth_collectin[counter]<father_BD||birth_collectin[counter]>father_DD||birth_collectin[counter]<mother_BD||birth_collectin[counter]>mother_DD){
                 System.out.print("Error!: "+names[counter]+" Birth: "+birth_collectin[counter]+" Death:"+Death_colection[counter]);
             }else{
             System.out.print(names[counter]+" Birth: "+birth_collectin[counter]+" Death:"+Death_colection[counter]);
             }
             }else{
                 
             if ((birth_collectin[counter]<father_BD||birth_collectin[counter]<mother_BD||birth_collectin[counter]>mother_DD||birth_collectin[counter]>father_DD)&&mother_DD!=0||father_DD!=0){
                  System.out.print("Error!: "+names[counter]+" Birth: "+birth_collectin[counter]+" ");
             }else{
              System.out.print(names[counter]+" Birth: "+birth_collectin[counter]+"  ");
             }
             
             }
             
             
         }
        
        }
            System.out.println("");
    
    }
    public static void US27(String[] name_collections, int[] Age, int counter) {
    System.out.println("------------------------\n"); 
    System.out.println("US27");   
    System.out.println("Name\t\t\tAge");
    int internal_counter =0;
    while (internal_counter<counter){
        System.out.println(name_collections[internal_counter]+"\t\t"+Age[internal_counter]);
        internal_counter++;
    }
    }
    public static void US35(String[] name_collections,int []birth_collectin, int counter,String [] months_collections){
   System.out.println("------------------------\n"); 
   System.out.println("US35");  
   System.out.println("Name\t\t\tBirth");
   int internal_counter =0;
    while (internal_counter<counter){
        if (birth_collectin[internal_counter]==2015&& months_collections[internal_counter].equalsIgnoreCase("SEP")){
        System.out.println(name_collections[internal_counter]+"\t\t"+"DB is Less than 30 Days");
        internal_counter++;
        }
        else{
          System.out.println(name_collections[internal_counter]+"\t\t"+"DB is More than 30 Days");
          internal_counter++;
        }
    }
    }
    private static void US36(int[] Death_colection, String[] name_collections, String[] months_collections, int counter) {
   System.out.println("------------------------\n"); 
   System.out.println("US36");  
   System.out.println("Name\t\t\tDeath");
   int internal_counter =0;
    while (internal_counter<counter){
        if (Death_colection[internal_counter]==2015&& months_collections[internal_counter].equalsIgnoreCase("SEP")){
        System.out.println(name_collections[internal_counter]+"\t\t"+"DD is Less than 30 Days");
        internal_counter++;
        }
        else{
          System.out.println(name_collections[internal_counter]+"\t\t"+"DD is More than 30 Days");
          internal_counter++;
        
        }
    }
    }
    public static void print_families (String [] id_collection, String [] name_collection) throws Exception{
    BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
     //   System.out.println("Family ID \t Husband \t Wife");
        while (read.ready()){
         String line= read.readLine();
         String [] split;
         if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
             split = line.split(" ");
        //     System.out.print("  "+split[1]+" \t\t");
             line= read.readLine();
             split = line.split(" ");
             
             int counter = 0;
             while (!split[2].equals(id_collection[counter])){
             counter ++;
             }
         //    System.out.print("  "+name_collection[counter]+"\t\t");
             line= read.readLine();
             split = line.split(" ");
             counter = 0;
             while (!split[2].equals(id_collection[counter])){
             counter ++;
             }
         //    System.out.print(name_collection[counter]+"\n");
             
         
         }
        
        }
    
    }    
    public static void US06 () throws Exception  {
    System.out.println("------------------------\n"); 
    System.out.println("US06");   
    System.out.print("Name\tStatues");
    BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
    int [] temp = getDivorce_Date();
    int counter=0;
    int number_of_names =0,number_of_div=0;
     while (read.ready()){
                String line= read.readLine();
                if(line.contains("NAME")){
                System.out.println();
                String[] split = line.split(" ");
                String name = split[2];
                System.out.print( name);
                number_of_names++;
                line= read.readLine();
                }
                if(line.contains("DIV")){
                    while ((number_of_names-1)>number_of_div){
                     temp[number_of_div]=0;
                        number_of_div++;
                    }
                System.out.print("\t"+" Divorced");
                line= read.readLine();
                String[] split = line.split(" ");
                temp[number_of_div]=Integer.valueOf(split[2].trim());
                number_of_div++;
                }
            }

        System.out.println("");
       setDivorce_Date(temp);
        
    }
    public static void US11 () throws Exception  {
        BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
        String [] id = new String [40];
        String [] family = new String [40];
        String [] current = new String [40];
        int id_counter=0, current_counter=0;
        System.out.println("------------------------\n"); 
        System.out.println("US11");
        System.out.println("Do we have a bigamy ?");
        while (read.ready()){
         String line= read.readLine();
         String [] split;
         if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
             split = line.split(" ");
             String DUMMY = split[1];
             family[id_counter]= DUMMY;
             line= read.readLine();
             split = line.split(" ");
             id[id_counter] = split[2];
             id_counter++;
             line= read.readLine();
             split = line.split(" ");
             id[id_counter] = split[2]; 
             family [id_counter]=DUMMY;
             while (read.ready()){
             line = read.readLine();
             if (line.contains("_CURRENT")){
             split = line.split(" ");
             while (current_counter < id_counter){
             current[current_counter]=split[2];
             current_counter++;
             }
             }
             id_counter++;
             }
        
        }
    
    
        }
             int counter =0,pointer=1, bi =0;
         while (counter< id_counter){
             while (pointer < id_counter){
                if(id[counter].equals(id[pointer])&&current[pointer].equals(current[counter])){
                        System.out.println("We have a Bigamy");
                        bi=1;
                    } 
                pointer++;
             }
             counter++;
         }
         if (bi==0)
          System.out.println("We No have a Bigamy");   
    
    }
    public static void US26 () throws Exception{
         BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
         System.out.println("US26");
         String []ids = getId_id_collection_prime();String[]names=getNames_collections();
         int counter=0;
        while (read.ready()){
         String line= read.readLine();
         String [] split;
         if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
          split = line.split(" ");
          System.out.println("  "+split[1]+" \t\t");
          System.out.println("Name\tRole");
         }//end of the if
         else if (line.contains("1")&& line.contains("HUSB")&&line.contains("@I")){
         split = line.split(" ");
          while (ids.length>counter){
             if (ids[counter].equals(split[2])){break;}
         counter++;
         }
             System.out.println(names[counter]+"\tHusband");
             counter=0;
         }
         else if (line.contains("1")&& line.contains("WIFE")&&line.contains("@I")){
         split = line.split(" ");
         while (ids.length>counter){
             if (ids[counter].equals(split[2])){break;}
         counter++;
         }
             System.out.println(names[counter]+"\tWife");
             counter=0;
         }
          else if (line.contains("1")&& line.contains("CHIL")&&line.contains("@I")){
         split = line.split(" ");
         while (ids.length>counter){
             if (ids[counter].equals(split[2])){break;}
         counter++;
         }
             System.out.println(names[counter]+"\tChild");
             counter=0;
         }
         
         
         
        }//end of the loop
         System.out.println("-----------------------");
     }
    public static void US28 () throws Exception{
     BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
         System.out.println("US28");
         String []ids = getId_id_collection_prime();String[]names=getNames_collections();
         int [] births = getBirths_collections();
         String [] names_of_siblings = new String[10];
         int [] age_of_siblings = new int[10];
         int counter=0,inter_loop=0;
         int loop_enterance= 0;
         
        while (read.ready()){
         String line= read.readLine();
         String [] split;
          if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
          split = line.split(" ");
          if (loop_enterance==1){
          while (inter_loop>0){
              System.out.println(names_of_siblings[inter_loop-1]+"\t"+age_of_siblings[inter_loop-1]);
              inter_loop--;
          }
          }
          System.out.println("  "+split[1]+" \t\t");
          System.out.println("Name\tAge Order in the family from the older to the youner child");
          }  
         else if (line.contains("1")&& line.contains("CHIL")&&line.contains("@I")){
         split = line.split(" ");
         while (ids.length>counter){
             if (ids[counter].equals(split[2])){break;}
         counter++;
         }
         names_of_siblings[inter_loop]=names[counter];
         age_of_siblings [inter_loop]= (2015-births[counter]);
         inter_loop++;
         loop_enterance = 1;
          //   System.out.println(names[counter]+"\t"+(2015-births[counter]));
             counter=0;
         }
        
        }
       if (loop_enterance==1){
          while (inter_loop>0){
              System.out.println(names_of_siblings[inter_loop-1]+"\t"+age_of_siblings[inter_loop-1]);
              inter_loop--;
          }
          }
        
     
     } 
    public static void US21 () throws Exception{
    BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
    System.out.println("");
    System.out.println("-----------------");
    System.out.println("US21");
        String [] ids = getId_id_collection_prime();
        String [] gen = getGendars_collections();
        int counter =0;
         while (read.ready()){
         String line= read.readLine();
         String [] split;
         if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
          split = line.split(" ");
          System.out.println("  "+split[1]+" \t\t");
          System.out.println("ROLE\t\tGendar");
         } else if (line.contains("1")&& line.contains("@I")&&(line.contains("HUSB")||line.contains("WIFE"))){
         split = line.split(" ");
          while (ids.length>counter){
             if (ids[counter].equals(split[2])){break;}
         counter++;
         }

          if (line.contains("HUSB")&gen[counter].equals("M")){
              System.out.println("HUSBAND"+"\t\t"+gen[counter]);
              counter=0;
          }else if(line.contains("HUSB")&gen[counter].equals("F")){
          System.out.println("Error ! "+"HUSBAND"+"\t"+gen[counter]);
          counter =0;
          }
          
            if (line.contains("WIFE")&gen[counter].equals("F")){
              System.out.println("WIFE"+"\t\t"+gen[counter]);
              counter=0;
          }else if(line.contains("WIFE")&gen[counter].equals("M")){
          System.out.println("Error ! "+"WIFE"+"\t"+gen[counter]);
          counter =0;
          }
                 
                 }
         counter=0;
    }
         
         
         
        
        }
    public static void US16()throws Exception{
     BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
     System.out.println("------------------------\n");
         System.out.println("US16");
         String father ="";
         String [] ids = getId_id_collection_prime();
         String [] last_names = getLast_names();
         String [] gen = getGendars_collections();
          int counter =0;
                 while (read.ready()){
         String line= read.readLine();
         String [] split;
         if(line.contains("0")&& line.contains("@F")&&line.contains("FAM")){
          split = line.split(" ");
          System.out.println("  "+split[1]+" \t\t");
          System.out.println("Lastname\tGendar");
         } else if (line.contains("1")&& line.contains("@I")&&(line.contains("HUSB")||line.contains("WIFE")||line.contains("CHIL"))){
         split = line.split(" ");
          while (ids.length>counter){
             if (ids[counter].equals(split[2])){break;}
         counter++;
         }
          if (line.contains("HUSB"))
              father=last_names[counter];
          if (last_names[counter].equals(father)&&gen[counter].equals("M")){
              System.out.println(last_names[counter]+"\t\t"+gen[counter]);
              counter=0;
          }else if((!last_names[counter].equals(father))&&gen[counter].equals("M")){
          System.out.println("Error ! "+last_names[counter]+"\t"+gen[counter]);
          counter =0;
          }
                 
                 }
         counter=0;
    }
    
    
    }
    public static void main(String[] args) throws Exception {
            BufferedReader read = new BufferedReader(new FileReader("My-Family-14-Sep-2015.ged"));
            print_names_id(read);
            age_checker();

    } 
}
